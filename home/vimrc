set nocompatible
filetype plugin on

set mouse=a

" show line numbers
set number
set nowrap
" Use space key as leader key
let mapleader = "\<Space>"

" Intent with 2 spaces
set tabstop=2
set shiftwidth=2
set expandtab
set smartindent
set autoindent
set noswapfile

set backspace=2 " Make DELETE work like normal

set clipboard=unnamed

set autoread
au CursorHold * checktime

" Load plugins ...
call plug#begin('~/.vim/plugged')

" Plug 'scrooloose/nerdtree'
Plug 'kien/ctrlp.vim'
Plug 'tomtom/tcomment_vim'
Plug 'mileszs/ack.vim'
Plug 'terryma/vim-multiple-cursors'
Plug 'itchyny/lightline.vim'
Plug 'NLKNguyen/papercolor-theme'
Plug 'hashivim/vim-terraform'
" Plug 'tpope/vim-surround'

Plug 'fatih/vim-go'
Plug 'Shougo/neocomplete.vim'

Plug 'ervandew/supertab'
" Plug 'sbdchd/neoformat' 
Plug 'pangloss/vim-javascript'
" Plug 'mxw/vim-jsx'
Plug 'azakus/vim-webcomponents'

" Plug 'sheerun/vim-polyglot'
call plug#end()

nnoremap <Leader>o :CtrlP<CR>
nnoremap <Leader>w :w<CR>
nnoremap <Leader>n :tabnew<CR>:vsplit<CR>:vsplit<CR> 

" <Tab> to cycle through splits
noremap <Tab> <C-w>w
noremap <S-Tab> <C-w>p

" <Leader><Tab> to cycle through tabs
noremap <Leader><Tab> gt

" Close the current split
nmap <leader>x <C-w>c

" Duplicate line
nnoremap dl mzyyP

nnoremap Y y$

set splitbelow
set splitright

" Reload vimrc
:nmap <leader>r :source $MYVIMRC<CR>

" Speed up CtrlP
let g:ctrlp_user_command = 'ag %s --files-with-matches --ignore-case --hidden -g ""'
" ['.git/', 'git ls-files --cached --others --exclude-standard %s']
let g:ctrlp_use_caching = 0

" Use ag instead of ack
if executable('ag')
  let g:ackprg = 'ag --vimgrep'
endif

" https://github.com/Shougo/deoplete.nvim/blob/master/doc%2Fdeoplete.txt
" call deoplete#enable()

" Enable Solarized Scheme
let $NVIM_TUI_ENABLE_TRUE_COLOR=1 " unclear if this is really needed?
syntax enable
set background=light
colorscheme PaperColor


let g:lightline = {
\ 'colorscheme': 'PaperColor',
\ }

let g:neocomplete#enable_at_startup = 1
let g:neocomplete#enable_smart_case = 1

let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_fields = 1
let g:go_highlight_types = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1
" let g:go_play_open_browser = 0

let g:terraform_fmt_on_save = 1

au FileType go nmap <Leader>gd <Plug>(go-doc-browser)

" Called once right before you start selecting multiple cursors
function! Multiple_cursors_before()
  if exists(':NeoCompleteLock')==2
    exe 'NeoCompleteLock'
  endif
endfunction

" Called once only when the multiple selection is canceled (default
" <Esc>)
function! Multiple_cursors_after()
  if exists(':NeoCompleteUnlock')==2
    exe 'NeoCompleteUnlock'
  endif
endfunction

" npm install -g prettier
" https://github.com/jlongster/prettier
" augroup fmt
"   autocmd!
"   autocmd BufWritePre * Neoformat
" augroup END

" set foldmethod=manual 
set ttyfast
set lazyredraw
set re=1
set norelativenumber

" let g:ctrlp_custom_ignore = {
"   \ 'dir':  '\v[\/]\.(git|hg|svn)$',
"   \ 'file': '\v\.(exe|so|dll)$',
"   \ 'link': 'some_bad_symbolic_links',
"   \ }


filetype plugin indent on
autocmd FileType yaml setl indentkeys-=<:>
